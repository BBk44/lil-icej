javascript:// Battle Hacks    // BEGIN IMPORTS import { Toast, NumberInput } from "../utils/swal"; // Import Toast and NumberInput from swal import { category } from "../index"; // Import the Cheat GUI bases. import Toggler from "../class/Toggler"; import Hack from "../class/Hack"; import { _, prodigy, game, VERY_LARGE_NUMBER, player } from "../utils/util"; // Import prodigy typings // END IMPORTS    // BEGIN BATTLE HACKS    // Begin Disable Math new Toggler(category.battle, "Disable math [PvP, PvE]", "Disable math in PvP, PvE, anywhere! This doesn't work in the Floatling town.").setEnabled(async () => {      // Use Prodigy's debug stuff to set EDUCATION_ENABLED to false     _.constants.constants["GameConstants.Debug.EDUCATION_ENABLED"] = false;     return Toast.fire("Enabled!", "You will no longer do Math!", "success");   }).setDisabled(async () => {      // Use Prodigy's debug stuff to set EDUCATION_ENABLED to true     _.constants.constants["GameConstants.Debug.EDUCATION_ENABLED"] = true;     return Toast.fire("Disabled!", "You will now do Math!", "success");  }); // End Disable Math       // Begin Instant Kill new Toggler(category.battle, "Instant Kill [PvE]", "Makes your spells do insane damage in PvE!").setEnabled(async () => {     player.modifiers.damage = VERY_LARGE_NUMBER;     return Toast.fire("Enabled!", "You will now do insane damage in PvE!", "success");  }).setDisabled(() => {     player.modifiers.damage = 1;     return Toast.fire("Disabled!", "You will no longer do insane damage in PvE!", "success"); }); // End Instant Kill       // Begin PvP Health new Hack(category.battle, "PvP Health [PvP]", "Increases your HP in PvP by a hell ton.").setClick(async () => {     player.pvpHP = VERY_LARGE_NUMBER;     player.getMaxHearts = () => VERY_LARGE_NUMBER;     return Toast.fire("Success!", "You now have lots of health!", "success"); }); // End PvP Health       // Begin Escape Battle new Hack(category.battle, "Escape Battle [PvP, PvE]", "Escape any battle, PvP or PvE!").setClick(async () => {     const currentState = game.state.current;     if (currentState === "PVP") {         Object.fromEntries(_.instance.game.state.states).PVP.endPVP();         return Toast.fire(             "Escaped!",             "You have successfully escaped from the PvP battle.",             "success"         );     } else if (currentState === "CoOp") {         prodigy.world.$(player.data.zone);         return Toast.fire(             "Escaped!",             "You have successfully escaped from the battle.",             "success"         );     } else if (!["Battle", "SecureBattle"].includes(currentState)) {         return Toast.fire(             "Invalid State.",             "You are currently not in a battle.",             "error"         );     } else {         Object.fromEntries(_.instance.game.state.states)[currentState].runAwayCallback();         return Toast.fire(             "Escaped!",             "You have successfully escaped from the PvE battle.",             "success"         );     } }); // End Escape Battle      // Begin Win Battle new Hack(category.battle, "Win Battle [PvE]", "Instantly win a battle in PvE.").setClick(async () => {  const currentState = game.state.current;     console.log("Current State: " + currentState);  switch (currentState) {     case "PVP":     case "CoOp":         return Toast.fire(         "Invalid State.",         "PvP is not supported for this hack.",         "error"         );         case "Battle":             Object.fromEntries(_.instance.game.state.states).Battle.startVictory();         return Toast.fire(         "Victory!",         "You have successfully won the battle.",         "success"         );         case "SecureBattle":         Object.fromEntries(_.instance.game.state.states).SecureBattle.battleVictory();             return Toast.fire(            "Victory!",            "You have successfully won the battle.",            "success"             );         default:             return Toast.fire(                 "Invalid State.",             "You are currently not in a battle.",             "error"            ); }   }); // End Win Battle       // Begin Set Battle Hearts new Hack(category.battle, "Set Battle Hearts [PvP, PvE]", "Sets your hearts in battle, automatically raise your max hearts in PvP or PvE.").setClick(async () => {     const hp = await NumberInput.fire("Health Amount", "How much HP do you want?%22,%20%22question%22);%20%20%20%20%20if%20(hp.value%20===%20undefined)%20return;%20%20%20%20%20player.getMaxHearts%20=%20()%20=%3E%20+hp.value;%20%20%20%20%20player.pvpHP%20=%20+hp.value;%20%20%20%20%20player.data.hp%20=%20+hp.value;%20%20%20%20%20return%20Toast.fire(%22Success!%22,%20%22Your%20hearts%20have%20been%20set.%22,%20%22success%22);%20});%20//%20End%20Set%20Battle%20Hearts%20%20%20%20%20%20//%20Begin%20Fill%20Battle%20Energy%20new%20Hack(category.battle,%20%22Fill%20Battle%20Energy%20[PvP,%20PvE]%22,%20%22Fills%20up%20your%20battle%20energy,%20if%20you%20are%20in%20PvP%20or%20PvE.%22).setClick(async%20()%20=%3E%20{%20%20%20%20%20const%20state%20=%20game.state.getCurrentState();%20%20%20%20%20if%20(!(%22teams%22%20in%20state))%20return%20Toast.fire(%22Error%22,%20%22You%20are%20currently%20not%20in%20a%20battle.%22,%20%22error%22);%20%20%20%20%20state.teams[0].setEnergy(99);%20%20%20%20%20return%20Toast.fire(%22Success!%22,%20%22Your%20battle%20energy%20has%20been%20filled.%22,%20%22success%22);%20});%20//%20End%20Fill%20Battle%20Energy%20%20%20//%20Begin%20Skip%20enemy%20turn%20new%20Toggler(category.battle,%20%22Skip%20enemy%20turn%22).setEnabled(async%20()%20=%3E%20{%20_.constants.constants[%22GameConstants.Battle.SKIP_ENEMY_TURN%22]%20=%20true;%20return%20Toast.fire(%22Skipping!%22,%20%22Enemy%20turns%20will%20now%20be%20skipped.%22,%20%22success%22);%20}).setDisabled(async%20()%20=%3E%20{%20_.constants.constants[%22GameConstants.Battle.SKIP_ENEMY_TURN%22]%20=%20false;%20return%20Toast.fire(%22Disabled%22,%20%22Enemy%20turns%20will%20no%20longer%20be%20skipped.%22,%20%22success%22);%20});%20//%20End%20Skip%20enemy%20turn%20%20%20%20%20%20%20//%20Begin%20Heal%20Team%20new%20Hack(category.battle,%20%22Heal%20Team%20[PvE]%22,%20%22Instantly%20heals%20you%20and%20your%20pets,%20if%20you%20are%20in%20PvE.%22).setClick(async%20()%20=%3E%20{%20%20%20%20%20%20%20const%20currentState:%20string%20=%20game.state.current;%20%20%20%20%20%20%20if%20(currentState%20===%20%22PVP%22%20||%20currentState%20===%20%22CoOp%22)%20{%20%20%20%20%20%20%20%20%20%20return%20Toast.fire(%22Invalid%20State.%22,%20%22PvP%20is%20not%20supported%20for%20this%20hack.%22,%20%22error%22);%20%20%20%20%20%20}%20else%20if%20([%22Battle%22,%20%22SecureBattle%22].includes(currentState))%20{%20%20%20%20%20%20%20%20%20player.heal();%20%20%20%20%20%20%20%20%20return%20Toast.fire(%22Success!%22,%20%22Your%20team%20has%20been%20healed%20successfully!%22,%20%22success%22);%20%20%20%20%20}%20else%20{%20%20%20%20%20%20%20%20%20return%20Toast.fire(%22Invalid%20State.%22,%20%22Your%20are%20currently%20not%20in%20a%20battle.%22,%20%22error%22);%20%20%20%20%20}%20});%20//%20End%20Heal%20Team%20%20%20%20//%20END%20BATTLE%20HACKS
